homeassistant:
  customize:
    sensor.backyard_door_sensor_battery_low:
      hidden: true
 
    
sensor:
  - platform: template
    sensors:
      ### Battery level for Backyard Door Sensor ###    
      battery_backyard_door_sensor:
        friendly_name: 'Backyard Door Sensor Battery'
        value_template: "{{ states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level|default(-1)|int if states.binary_sensor.door_window_sensor_158d00019e152b is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.door_window_sensor_158d00019e152b

      # ### Battery level for Back Door Sensor ###
      # battery_back_door_sensor:
      #   friendly_name: 'Back Door Sensor Battery'
      #   value_template: "{{ states.zwave.back_door.attributes.battery_level|default(-1)|int if states.zwave.back_door is not none }}"
      #   unit_of_measurement: '%'
      #   icon_template: '{% if states.zwave.back_door.attributes.battery_level == 100 %}
      #                      mdi:battery
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 90 %}
      #                      mdi:battery-90
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 80 %}
      #                      mdi:battery-80
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 70 %}
      #                      mdi:battery-70
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 60 %}
      #                      mdi:battery-60
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 50 %}
      #                      mdi:battery-50
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 40 %}
      #                      mdi:battery-40
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 30 %}
      #                      mdi:battery-30
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 20 %}
      #                      mdi:battery-20
      #                   {% elif states.zwave.back_door.attributes.battery_level >= 10 %}
      #                      mdi:battery-10
      #                   {% else %}
      #                      battery-outline
      #                   {% endif %}'
      #   entity_id: zwave.back_door

      # ### Battery level for Front Door Sensor ###
      # battery_front_door_sensor:
      #   friendly_name: 'Front Door Sensor Battery'
      #   value_template: "{{ states.zwave.front_door.attributes.battery_level|default(-1)|int if states.zwave.front_door is not none }}"
      #   unit_of_measurement: '%'
      #   icon_template: '{% if states.zwave.front_door.attributes.battery_level == 100 %}
      #                      mdi:battery
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 90 %}
      #                      mdi:battery-90
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 80 %}
      #                      mdi:battery-80
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 70 %}
      #                      mdi:battery-70
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 60 %}
      #                      mdi:battery-60
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 50 %}
      #                      mdi:battery-50
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 40 %}
      #                      mdi:battery-40
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 30 %}
      #                      mdi:battery-30
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 20 %}
      #                      mdi:battery-20
      #                   {% elif states.zwave.front_door.attributes.battery_level >= 10 %}
      #                      mdi:battery-10
      #                   {% else %}
      #                      battery-outline
      #                   {% endif %}'
      #   entity_id: zwave.front_door

      ### Battery level for Hallway Glass Door Sensor ###
      battery_hallway_glass_door_sensor:
        friendly_name: 'Hallway Glass Door Sensor Battery'
        value_template: "{{ states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level|default(-1)|int if states.binary_sensor.door_window_sensor_158d00016d6ef9 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.door_window_sensor_158d00016d6ef9.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.door_window_sensor_158d00016d6ef9

      ### Battery level for Yard Storage Door Sensor ###
      battery_yard_storage_door_sensor:
        friendly_name: 'Yard Storage Door Sensor Battery'
        value_template: "{{ states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level|default(-1)|int if states.binary_sensor.door_window_sensor_158d00019f5110 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.door_window_sensor_158d00019f5110.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.door_window_sensor_158d00019f5110

      ### Battery level for Bathroom Cabinet Door Sensor ###
      battery_bathroom_cabinet_door_sensor:
        friendly_name: 'Bathroom Cabinet Door Sensor Battery'
        value_template: "{{ states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level|default(-1)|int if states.binary_sensor.door_window_sensor_158d0001a3e3a4 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e3a4.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.door_window_sensor_158d0001a3e3a4

      ### Battery level for Xiaomi Unknown Door Sensor ###
      battery_unknown_xiaomi_door_sensor:
        friendly_name: 'Unknown Xiaomi Door Sensor Battery'
        value_template: "{{ states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level|default(-1)|int if states.binary_sensor.door_window_sensor_158d0001a3df50 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3df50.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.door_window_sensor_158d0001a3df50

      ### Battery level for Balcony Door Sensor ###
      battery_balcony_door_sensor:
        friendly_name: 'Balcony Door Sensor Battery'
        value_template: "{{ states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level|default(-1)|int if states.binary_sensor.door_window_sensor_158d0001a3e45e is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.door_window_sensor_158d0001a3e45e.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.door_window_sensor_158d0001a3e45e

      ### Battery level for Upstairs Litterbox Pir Sensor ###
      battery_ulitter_pir_sensor:
        friendly_name: 'Upstairs Litterbox Pir Sensor Battery'
        value_template: "{{ states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level|default(-1)|int if states.binary_sensor.motion_sensor_158d0001a66291 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.motion_sensor_158d0001a66291.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.motion_sensor_158d0001a66291

      ### Battery level for Downstairs Litterbox Pir Sensor ###
      battery_dlitter_pir_sensor:
        friendly_name: 'Downstairs Litterbox Pir Sensor Battery'
        value_template: "{{ states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level|default(-1)|int if states.binary_sensor.motion_sensor_158d0001a24ef1 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.motion_sensor_158d0001a24ef1.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.motion_sensor_158d0001a24ef1

      ### Battery level for Bed Switch ###
      battery_bed_switch:
        friendly_name: 'Bed Switch Battery'
        value_template: "{{ states.binary_sensor.switch_158d0001243520.attributes.battery_level|default(-1)|int if states.binary_sensor.switch_158d0001243520 is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.switch_158d0001243520.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.switch_158d0001243520.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
        entity_id: binary_sensor.switch_158d0001243520

      ### Battery level for Upstairs Hallway Pir ###
      # battery_upstairs_hallway_pir_sensor:
      #   friendly_name: 'Upstairs Hallway Pir Battery'
      #   value_template: "{{ states.zwave.upstairs_hallway_pir.attributes.battery_level|default(-1)|int if states.zwave.upstairs_hallway_pir is not none }}"
      #   unit_of_measurement: '%'
      #   icon_template: '{% if states.zwave.upstairs_hallway_pir.attributes.battery_level == 100 %}
      #                      mdi:battery
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 90 %}
      #                      mdi:battery-90
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 80 %}
      #                      mdi:battery-80
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 70 %}
      #                      mdi:battery-70
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 60 %}
      #                      mdi:battery-60
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 50 %}
      #                      mdi:battery-50
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 40 %}
      #                      mdi:battery-40
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 30 %}
      #                      mdi:battery-30
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 20 %}
      #                      mdi:battery-20
      #                   {% elif states.zwave.upstairs_hallway_pir.attributes.battery_level >= 10 %}
      #                      mdi:battery-10
      #                   {% else %}
      #                      battery-outline
      #                   {% endif %}'
      #   entity_id: zwave.upstairs_hallway_pir

      ### Battery level for Passage Pir ###
      # battery_passage_pir_sensor:
      #   friendly_name: 'Passage Pir Battery'
      #   value_template: "{{ states.zwave.passage_pir.attributes.battery_level|default(-1)|int if states.zwave.passage_pir is not none }}"
      #   unit_of_measurement: '%'
      #   icon_template: '{% if states.zwave.passage_pir.attributes.battery_level == 100 %}
      #                      mdi:battery
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 90 %}
      #                      mdi:battery-90
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 80 %}
      #                      mdi:battery-80
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 70 %}
      #                      mdi:battery-70
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 60 %}
      #                      mdi:battery-60
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 50 %}
      #                      mdi:battery-50
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 40 %}
      #                      mdi:battery-40
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 30 %}
      #                      mdi:battery-30
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 20 %}
      #                      mdi:battery-20
      #                   {% elif states.zwave.passage_pir.attributes.battery_level >= 10 %}
      #                      mdi:battery-10
      #                   {% else %}
      #                      battery-outline
      #                   {% endif %}'
      #   entity_id: zwave.passage_pir

     ### Battery level for Dining Area Window Sensor ###
      # battery_dining_area_sensor:
      #   friendly_name: 'Dining Area Window Sensor Battery'
      #   value_template: "{{ states.zwave.dining_area_window_sensor.attributes.battery_level|default(-1)|int if states.zwave.dining_area_window_sensor is not none }}"
      #   unit_of_measurement: '%'
      #   icon_template: '{% if states.zwave.dining_area_window_sensor.attributes.battery_level == 100 %}
      #                      mdi:battery
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 90 %}
      #                      mdi:battery-90
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 80 %}
      #                      mdi:battery-80
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 70 %}
      #                      mdi:battery-70
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 60 %}
      #                      mdi:battery-60
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 50 %}
      #                      mdi:battery-50
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 40 %}
      #                      mdi:battery-40
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 30 %}
      #                      mdi:battery-30
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 20 %}
      #                      mdi:battery-20
      #                   {% elif states.zwave.dining_area_window_sensor.attributes.battery_level >= 10 %}
      #                      mdi:battery-10
      #                   {% else %}
      #                      battery-outline
      #                   {% endif %}'
      #   entity_id: zwave.dining_area_window_sensor

     ### Battery level for Water Heater Sensor ###
      # battery_water_heater_sensor:
      #   friendly_name: 'Water Heater Sensor Battery'
      #   value_template: "{{ states.zwave.water_heater.attributes.battery_level|default(-1)|int if states.zwave.water_heater is not none }}"
      #   unit_of_measurement: '%'
      #   icon_template: '{% if states.zwave.water_heater.attributes.battery_level == 100 %}
      #                      mdi:battery
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 90 %}
      #                      mdi:battery-90
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 80 %}
      #                      mdi:battery-80
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 70 %}
      #                      mdi:battery-70
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 60 %}
      #                      mdi:battery-60
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 50 %}
      #                      mdi:battery-50
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 40 %}
      #                      mdi:battery-40
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 30 %}
      #                      mdi:battery-30
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 20 %}
      #                      mdi:battery-20
      #                   {% elif states.zwave.water_heater.attributes.battery_level >= 10 %}
      #                      mdi:battery-10
      #                   {% else %}
      #                      battery-outline
      #                   {% endif %}'
      #   entity_id: zwave.water_heater

### Battery level lower than 10% ###
  - platform: template
    sensors:
      backyard_door_sensor_battery_low:
        value_template: '{{ states.binary_sensor.door_window_sensor_158d00019e152b.attributes.battery_level < 10 }}'
        friendly_name: 'Backyard Door Sensor battery is low'

alert: 
### Alert via iOS notification when Bedroom sensor battery < 10% ###
  backyard_door_sensor_battery_low:
    name: Backyard door sensor battery is low
    entity_id: sensor.backyard_door_sensor_battery_low
    state: 'True'
# Repeat in minutes (1 day = 1440 minutes)
    repeat: 1440
    skip_first: False
    notifiers:
      - ios_isabellas_iphone_6s

automation:
  - alias: Low Battery
    initial_state: 'on'
    trigger:
      - platform: numeric_state
        entity_id: sensor.battery_water_heater_sensor
        below: 10
      - platform: numeric_state
        entity_id: sensor.battery_back_door_sensor
        below: 10
      - platform: numeric_state
        entity_id: sensor.battery_backyard_door_sensor
        below: 10
    action:
      - service: notify.ios_isabellas_iphone_6s
        data_template:
          title: 'Battery low'
          message: >
            '{{ trigger.to_state.name }}'