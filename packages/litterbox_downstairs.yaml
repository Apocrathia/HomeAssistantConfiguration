## Python scripts: https://github.com/isabellaalstrom/HomeAssistantConfiguration/tree/master/python_scripts

homeassistant:
  customize:
    sensor.downstairs_litterbox_visits:
      icon: mdi:poop
      friendly_name: Downstairs Litterbox Visits
    binary_sensor.motion_sensor_158d0001a24ef1:
      hidden: true
      friendly_name: Downstairs Litterbox
    sensor.illumination_158d0001a24ef1:
      friendly_name: Downstairs Litterbox Lux
    sensor.downstairs_litterbox:
      extra_badge:
        entity_id: sensor.downstairs_litterbox_visits


binary_sensor:
  - platform: rfxtrx
    devices:
      091300160991a1011680:
        name: White2
        off_delay:
          seconds: 5

#-------------------------------------------

sensor:
  # Dummy sensor for counting with python script
  - platform: mqtt
    state_topic: "litterbox/downstairs/count"
    name: Downstairs Litterbox Visits
    unit_of_measurement: "visits"

  # Template sensor for dynamic icon and value
  - platform: template
    sensors:
      downstairs_litterbox:
        friendly_name: 'Downstairs Litterbox'
        value_template: '{% if is_state("binary_sensor.motion_sensor_158d0001a24ef1", "on") %}In use{% else %}Clear{% endif %}'
        icon_template: '{% if is_state("binary_sensor.motion_sensor_158d0001a24ef1", "on") %}mdi:cat{% else %}mdi:paw-off{% endif %}'

# Controlling of mode for not registering motion
input_select:
  dlitterbox_state:
    name: Downstairs Litterbox State
    options:
      - Clean
      - Dirty
      - Cleaning
    initial: Clean
    icon: mdi:paw

#-------------------------------------------

automation:
  # Count visits
  - alias: Litterbox Downstairs Counter
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_sensor_158d0001a24ef1
        to: 'on'
    condition:
      condition: and
      conditions:
        # Condition for not triggering the counter if it was less than three minutes (180 sec) since last trigger
        - condition: template
          value_template: >
            {% if states.automation.litterbox_downstairs_counter.last_triggered is not none %}
              {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.litterbox_downstairs_counter.attributes.last_triggered) | int > 180 %} true {% else %} false
              {% endif %}
            {% else %}
            false
            {% endif %}
        # Condition that makes sure that the input select is Dirty or Clean (not in Cleaning mode)
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.dlitterbox_state
              state: 'Clean'
            - condition: state
              entity_id: input_select.dlitterbox_state
              state: 'Dirty'
    action:
      # Count the visit on counter for this litterbox and also all litterboxes
      - service: python_script.dlitter_counter
      - service: python_script.all_litter_counter
      # Set the input select to Dirty
      - service: input_select.select_option
        data:
          entity_id: input_select.dlitterbox_state
          option: 'Dirty'
      # Log visit to Google Drive Spreadsheet
      - service: ifttt.trigger
        data: {"event":"Litterbox_Visit", "value1":"Downstairs Litterbox"}


  # Send notification on second visit
  - alias: Litterbox Downstairs Cleaning Notification
    initial_state: 'on'
    trigger:
      # Trigger either on second or higher visit
      - platform: numeric_state
        entity_id: sensor.downstairs_litterbox_visits
        above: '1'
      # or ten minutes after I get home
      - platform: state
        entity_id: device_tracker.isabellas_iphone_6s
        to: 'home'
        for:
          minutes: 10
    condition:
      condition: and
      conditions:
        # Don't notify between 23pm and 7am
        - condition: time
          after: '07:00:00'
          before: '23:00:00'
        # Don't notify if I'm not home
        - condition: state
          entity_id: device_tracker.isabellas_iphone_6s
          state: 'home'
        # Notify only if only more than two visits (for when triggered when I get home)
        - condition: numeric_state
          entity_id: sensor.downstairs_litterbox_visits
          above: '1'
    action:
      # Notify me on my ios app
      - service: notify.ios_isabellas_iphone_6s
        data_template:
          title: 'Time to clean'
          # Dynamic message that takes current number of visits
          message: >
            '{{ states('sensor.downstairs_litterbox_visits') }} visits to downstairs litterbox'


  # Set in cleaning mode on button press
  - alias: Litterbox Downstairs Cleaning Mode
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.white2
        to: 'on'
    condition:
      condition: or
      conditions:
        # Only if it's currently Clean or Dirty
        - condition: state
          entity_id: input_select.dlitterbox_state
          state: 'Dirty'
        - condition: state
          entity_id: input_select.dlitterbox_state
          state: 'Clean'
    action:
      # Set the input select to Cleaning
      - service: input_select.select_option
        data:
          entity_id: input_select.dlitterbox_state
          option: 'Cleaning'


  # Reset on button press when cleaned
  - alias: Litterbox Downstairs Cleaned
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.white2
        to: 'on'
    condition:
      # Only if it's currently being cleaned
      condition: state
      entity_id: input_select.dlitterbox_state
      state: 'Cleaning'
    action:
      # Set the input select to Clean
      - service: input_select.select_option
        data:
          entity_id: input_select.dlitterbox_state
          option: 'Clean'
      # Run the python script for reseting counter
      - service: python_script.dlitter_reset


## ------------------------------------------------------------------
##   Cleaning mode left on, actionable ios-notification 

  - alias: 'Litterbox Downstairs Cleaning'
    trigger:
      - platform: state
        entity_id: input_select.dlitterbox_state
        to: 'Cleaning'
        for:
          minutes: 1
    action:
      - service: notify.ios_isabellas_iphone_6s
        data:
          title: 'Downstairs litterbox'
          message: 'Are you done cleaning?'
          data:
            push:
              badge: 0
              category: "CLEANING_MODE_D_STILL_ON"

  - alias: 'Litterbox Downstairs Cleaning Done'
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: CLEANING_D_DONE
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.dlitterbox_state
          option: 'Clean'
      - service: notify.ios_isabellas_iphone_6s
        data:
          title: 'Downstairs litterbox'
          message: 'Cleaning mode off'

  - alias: 'Litterbox Downstairs Cleaning Not Done'
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: CLEANING_D_NOT_DONE
    action:
      - service: notify.ios_isabellas_iphone_6s
        data:
          title: 'Not done cleaning downstairs litter box'
          message: 'Remember to change status later'