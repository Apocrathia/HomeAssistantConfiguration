homeassistant:
  customize:
    sensor.downstairs_litter_box_visits:
      icon: mdi:poop
      friendly_name: Downstairs Litter Box Visits
    binary_sensor.motion_sensor_158d0001a24ef1:
      hidden: true
      friendly_name: Downstairs Litter Box
    sensor.illumination_158d0001a24ef1:
      friendly_name: Downstairs Litter Box Lux
    sensor.downstairs_litter_box:
      extra_badge:
        entity_id: sensor.downstairs_litter_box_visits
        
#-------------------------------------------

sensor:
  - platform: mqtt
    state_topic: "litterbox/downstairs/count"
    name: Downstairs Litter Box Visits
    unit_of_measurement: "visits"

  - platform: template
    sensors:
      downstairs_litter_box:
        friendly_name: 'Downstairs Litter Box'
        value_template: '{% if is_state("binary_sensor.motion_sensor_158d0001a24ef1", "on") %}In use{% else %}Clear{% endif %}'
        icon_template: '{% if is_state("binary_sensor.motion_sensor_158d0001a24ef1", "on") %}mdi:cat{% else %}mdi:paw-off{% endif %}'

input_select:
  dlitterbox_state:
    name: Downstairs Litter Box State
    options:
      - Clean
      - Dirty
      - Cleaning
    initial: Clean
    icon: mdi:paw

#-------------------------------------------

automation:
  - alias: Litterbox Downstairs Counter
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_sensor_158d0001a24ef1
        to: 'on'
    condition:
    - condition: template
      value_template: >
        {% if states.automation.litterbox_downstairs_counter.last_triggered is not none %}
          {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.litterbox_downstairs_counter.attributes.last_triggered) | int > 300 %} true {% else %} false
          {% endif %}
        {% else %}
        false
        {% endif %}
    action:
      - service: python_script.dlitter_counter
      - service: python_script.all_litter_counter
      - service: input_select.select_option
        data:
          entity_id: input_select.dlitterbox_state
          option: 'Dirty'
      - service: ifttt.trigger
        data: {"event":"Litterbox_Visit", "value1":"Downstairs Litterbox"}

  - alias: Litterbox Downstairs Cleaning Notification
    initial_state: 'on'
    trigger:
      - platform: numeric_state
        entity_id: sensor.downstairs_litter_box_visits
        above: '1'
      - platform: state
        entity_id: device_tracker.isabellas_iphone_6s
        to: 'home'
        for:
          minutes: 10
    condition:
      condition: and
      conditions:
        - condition: time
          after: '07:00:00'
          before: '23:00:00'
        - condition: state
          entity_id: device_tracker.isabellas_iphone_6s
          state: 'home'
        - condition: numeric_state
          entity_id: sensor.downstairs_litter_box_visits
          above: '1'
    action:
      - service: notify.ios_isabellas_iphone_6s
        data_template:
          title: 'Time to clean'
          message: >
            '{{ states('sensor.downstairs_litter_box_visits') }} visits to downstairs litterbox'

  - alias: Litterbox Downstairs Cleaning Mode
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.white2
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.dlitterbox_state
          state: 'Dirty'
        - condition: state
          entity_id: input_select.dlitterbox_state
          state: 'Clean'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.dlitterbox_state
          option: 'Cleaning'

  - alias: Litterbox Downstairs Cleaned
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.white2
    condition:
      condition: state
      entity_id: input_select.dlitterbox_state
      state: 'Cleaning'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.dlitterbox_state
          option: 'Clean'
      - service: python_script.dlitter_reset