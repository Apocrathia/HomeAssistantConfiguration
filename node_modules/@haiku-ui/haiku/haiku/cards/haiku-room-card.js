import { LitElement, html } from 'https://unpkg.com/@polymer/lit-element@^0.5.2/lit-element.js?module';
import { repeat } from 'https://unpkg.com/lit-html@0.10.2/lib/repeat.js?module';
import 'https://unpkg.com/lodash@4.17.10/lodash.js?module';

/**
 * A card that summarizes a rooms entities.
 */
class HaikuRoomCard extends LitElement {
  static get properties() {
    return {
      hass: Object,
      config: Object
    };
  }

  _render({ hass, config }) {
    const lightingGroups = this.getLightingGroups(hass, config.groups);

    return html`
      <style>.haiku-room-card {
  border: solid 1px red; }
</style>
      <ha-card class="haiku-room-card">
        <ul>
          <li>Lighting</li>
          ${repeat(lightingGroups, (g) => g.name, (g) => html`
            <li>
              ${g.name} is ${g.state}
            </li>
          `)}
        </ul>
        <textarea>${ JSON.stringify(config) }</textarea>
      </ha-card>
    `;
  }

  getLightingGroups(hass, groups) {
    return _.map(_.filter(groups, (group) => {
      return group.type === 'lighting';
    }), (group) => {
      const entities = this.getLightingEntities(hass, group.entities);
      return {
        name: group.name,
        entities,
        state: _.some(entities, (entity) => {
          return entity.state === 'on';
        }) ? 'on' : 'off'
      };
    });
  }

  getLightingEntities(hass, entities) {
    return _.map(entities, (entity) => {
      const state = hass.states[entity];
      return {
        name: state ? state.friendly_name : entity,
        state: state ? state.state : 'unavailable'
      };
    });
  }

  getCardSize() {
    return 4;
  }
}

customElements.define('haiku-room-card', HaikuRoomCard);
